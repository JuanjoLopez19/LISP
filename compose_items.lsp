
(defun compose_items (L1 L2)
    (prog(composed sustituido sustituto itemL1 itemL2)
        (setf composed (apply_items L2 L1))
        (dolist (itemL1 composed)
            (setf sustituto (first itemL1))
            (setf sustituido (nth 1 itemL1))
            (dolist (itemL2 L2)
                (setf sustitutoL2 (first itemL2))
                (setf sustituidoL2 (nth 1 itemL2))
                (if (equal sustituido sustitutoL2)
                    (delete itemL2 L2)
                )
            )
        )
        (return composed)
    )
)

;;  '((G ((? X) (? Y))) ((? Z))) '((A (? X)) (B (? Y)) (C (? W)) (D (? Z)))